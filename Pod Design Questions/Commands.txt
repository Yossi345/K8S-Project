1. kubectl get pods --show-labels
2. kubectl run nginx-app1 --image=nginx --labels="env=prod" ; kubectl run nginx-app2 --image=nginx --labels="env=prod" ;  kubectl run nginx-app3 --image=nginx --labels="env=dev" ;  kubectl run nginx-app4 --image=nginx --labels="env=dev" ; kubectl run nginx-app5 --image=nginx --labels="env=dev"
3. kubectl get pods --show-labels | grep nginx-app
4. kubectl get pods --selector=env=dev
5. kubectl get pods --selector=env=dev --show-labels
6. kubectl get pods --selector=env=prod
7. kubectl get pods --selector=env=prod --show-labels
8. kubectl get pods --selector=env
9. kubectl get pods -l 'env in (dev,prod)'
10. kubectl get pods -l 'env in (dev,prod)' --show-labels
11. kubectl label pod nginx-app5 env=uat --overwrite ; kubectl get pods --show-labels
12. kubectl label pods -l 'env in (dev,prod,uat)' env- ; kubectl get pods --show-labels | grep nginx-app
13. kubectl label pods nginx-app1 nginx-app2 nginx-app3 nginx-app4 nginx-app5 app=nginx ; kubectl get pods -l app=nginx --show-labels
14. kubectl get nodes --show-labels
15. kubectl label node k3d-labcluster01-agent-0 nodeName=nginxnode
16. 
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: nginx
  name: nginx
spec:
  containers:
  - image: nginx
    name: nginx
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Never
  nodeSelector:
    nodename: nginxnode
status: {}

17. kubectl get pods --field-selector spec.nodeName=nginxnode | grep nginx
18. kubectl get pods --field-selector spec.nodeName=nginxnode --show-labels | grep nginx
